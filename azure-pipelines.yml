# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'update_dependencies'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
    maxParallel: 1

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip pipenv
    displayName: 'Setup environment'

  - script: pipenv lock --dev
    displayName: 'Lock dependencies'

  - script: pipenv lock -r > requirements.txt
    displayName: 'Write requirements.txt'

  - script: pipenv lock -r -d > requirements-dev.txt
    displayName: 'Write requirements-dev.txt'
